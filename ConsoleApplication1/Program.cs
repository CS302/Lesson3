using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApplication1
{
    class Program
    {
        static void Main(string[] args)
        {
            /*
             * создаем первый экземпляр класса Worker - 
             * (объект) worker1 и передаем в его конструктор имя, возраст и ИНН
             */
            Worker worker1 = new Worker("Вася", 45, 165168168);
            /*
             * Вызываем у нашего объекта(работника)
             * метод Print()
             */
            worker1.Print();

            /*
             * создаем второй экземпляр класса Worker - 
             * (объект) worker2 и передаем в его конструктор имя, возраст и ИНН
             */
            Worker worker2 = new Worker("Петя", 27, 41649164);
            /*
             * Вызываем у нашего объекта(работника)
             * метод Print()
             */
            worker2.Print();

            /*
             * создаем третий экземпляр класса Worker - 
             * (объект) worker3 и передаем в его конструктор имя и возраст.
             * При этом используется второй конструктор. ИНН задается 
             * значением по умолчанию - нулем.
             */
            Worker worker3 = new Worker("Светлана", 23);
            /*
             * Вызываем у нашего объекта(работника)
             * метод Print()
             */
            worker3.Print();

            Console.ReadLine();
        }
    }

    
    /*
     * Класс Worker служит нам для моделирования работников
     * нашей фирмы. По его "шаблону" мы можем создавать объекты - 
     * см. метод Main();
     */
    class Worker
    {
        /*
         * первое поле класса. В этой "ячейке"
         * может храниться имя каждого нашего работника.
         */
        private string name;
        /*
         * Второе поле нашего класса.
         * Хранит возраст нашего работника.
         */
        private int age;
        /*
         * Третье поле нашего класса.
         * Хранит ИНН нашего работника.
         */
        public Int64 snn;

        /*
         * Первое свойство в нашем классе.
         * Отвечает за взаимодействие с именем нашего работника.
         * Мы пришли к выводу, что имя остается неизменным на протяжении 
         * жизни нашего работника, поэтому мы оставили только метод get{} - 
         * возможность посмотреть его имя. Поле name сделали приватным.
         */
        public string Name
        {
            get { return name; }
        }
        /*
         * Второе свойство в нашем классе.
         * Отвечает за взаимодействие с возрастом нашего работника.
         * Мы пришли к выводу, что нельзя дать возможность случайно или по ошибке
         * записать работнику отрицательный возраст. Поэтому: поле age сделали приватным,
         * установка возраста только через метод set{}, чтение через метод get{}.
         */
        public int Age
        {
            //обеспечивает возможность "посмотреть" возраст
            get { return age; }
            //обеспечивает возможность задать возраст
            set
            {
                /*
                 * Используется некоторая переменная value.
                 * По сути, значение, которое мы хотим задать в качестве 
                 * возраста сперва передается в нее.
                 */
                if (value < 0)
                {
                    Console.WriteLine("Неверно задан возраст!");
                }
                else
                {
                    age = value;
                }
            }
        }

        /*
         * Первый и единственный метод в нашем классе.
         * Он определяет то, что "умеет делать наш работник" - рассказать о себе.
         * Или другими словами - вывести информацию о себе на консоль.
         */
        public void Print()
        {
            Console.WriteLine("Имя: " + name);
            Console.WriteLine("Возраст: " + age);
            Console.WriteLine("ИНН: " + snn);
            Console.WriteLine();
        }

        /*
         * Первый конструктор нашего класса. Его функция - задать информацию
         * о работнике. При вызове констуктора (см. метод Main()) мы передаем в него 3 параметра:
         * имя, возраст, ИНН, которые записываются в соответствующие поля.
         */
        public Worker(string name, int age, Int64 snn)
        {
            this.name = name;
            this.Age = age;
            this.snn = snn;
        }

        /*
         * Второй конструктор нашего класса. Предусмотрен на случай если нам не
         * известен ИНН работника. Функция этого конструктора - та же самая, мы
         * задаем информацию о нашем работнике. При вызове констуктора (см. метод Main())
         * мы передаем в него 2 параметра: имя, возраст, которые записываются в соответствующие поля.
         */
        public Worker(string name, int age)
            : this(name, age, 0)
        {
            /*
             * с помощью ключевого слова this мы указали,
             * что этот конструктор ссылается на первый(основной)
             * конструктор нашего класса.
             */
        }
    }
}
